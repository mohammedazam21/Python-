class Parkinglot:
    def __init__(self, capacity=20):
        self.capacity = capacity
        self.slots = [None] * capacity 
    
    def park(self, vehicle_number):
        if None in self.slots:
            slot = self.slots.index(None)
            self.slots[slot] = vehicle_number
            print("Vehicle {vehicle_number} parked in slot {slot + 1}.")
        else:
            print("Parking lot is full. Cannot park the vehicle.")
    
    def exit(self, vehicle_number):
        if vehicle_number in self.slots:
            slot = self.slots.index(vehicle_number)
            self.slots[slot] = None
            print(f"Vehicle {vehicle_number} exited from slot {slot + 1}.")
        else:
            print("Vehicle {vehicle_number} not found in the parking lot.")

    def print_parking_status(self):
        print("Current Parking Lot Status:")
        for i, vehicle in enumerate(self.slots):
            if vehicle:
                print("Slot {i + 1}: Vehicle {vehicle}")
            else:
                print("Slot {i + 1}: Empty")
                
if __name__ == "__main__":
    parking_lot = ParkingLot()

    while True:
        action = input("Do you want to park or exit? (park/exit/quit): ").strip().lower()

        if action == "park":
            if None in parking_lot.slots:
                vehicle_number = input("Enter vehicle number: ").strip()
                parking_lot.park(vehicle_number)
            else:
                print("Parking lot is full. Cannot park the vehicle.")

        elif action == "exit":
            vehicle_number = input("Enter vehicle number to exit: ").strip()
            parking_lot.exit(vehicle_number)

        elif action == "quit":
            print("Exiting the program.")
            break
        
        else:
            print("Invalid input. Please enter 'park', 'exit', or 'quit'.")

        parking_lot.print_parking_status()
